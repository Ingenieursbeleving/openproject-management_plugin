#-- copyright
# OpenProject management plugin.
# Copyright (C) 2020 Floris Janssens (florisjanssens@outlook.com)
#
# OpenProject is an open source project management software.
# Copyright (C) 2012-2020 the OpenProject GmbH
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version 3.
#
# OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:
# Copyright (C) 2006-2017 Jean-Philippe Lang
# Copyright (C) 2010-2013 the ChiliProject Team
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# See doc/COPYRIGHT.md for more details.
#++

language: ruby

rvm:
- 2.6.6

sudo: required
dist: xenial

branches:
  only:
  - dev

cache:
  bundler: true
  # Notice, the directories directive is also used for files.
  # This is the only way to do this and works, but if the cache doesn't exist yet
  # it will create the file as a directory, this can easily be solved by just deleting it later
  # as happens in this pipeline.
  directories:
  - ../openproject/Gemfile
  - ../openproject/public/assets
  - ../openproject/app/assets/javascripts/bundles
  - ../openproject/app/assets/javascripts/locales
  - ../openproject/last_succesfull_build_sha.txt

env:
  global:
  # Using the gemfile: directive instead of BUNDLE_GEMFILE doesn't work. The gemfile: directive makes the job fail
  # if the Gemfile isn't found. When preparing the cache, the Gemfile might be unavailable. The Gemfile is
  # obtained when cloning the OpenProject core git repo in before_install. When using the gemfile:
  # directive, the existance is checked before cloning the repo. The existance of the Gemfile
  # specified in the BUNDLE_GEMFILE directive is only checked when actually installing Gems
  # which happens after the before_install phase
  - BUNDLE_GEMFILE="../openproject/Gemfile"
  - CI=true
  - RAILS_ENV=test
  # Secured GitHub token, to increate the rate limiting of the GitHub API
  - secure: mASujfoUYG52eiY3LGlAo7JSmFm5RjfDNhPqikIDFSAIph6EK8ChKDUI0wcV91UXEx2p0lG14TKWfYnCdDVs2wmnva9VFW0Ig56XEBOJqRrf3WKNudKNxbEnpup4ZgrEp6AGUMrehlZYyK2nLzIpTPOfmX6QF/5ZuAcIokQ5z2Th1LHuLmNSaZ1U/1vDWP9Y4ym6QEaa3Ije/Bg2Q5OJrpVO5vuw8iJsPt4hmJ7sUA0tqcmo8NA/l9n61old5Iz6y0iAvsODCgL3o2GD8Ks0TcEyhrkiAw2cF4qOpEhCkVVmihyIuPTloetJsYd1aZiAcwxP2gWbHrrR4cIrQqMJKfIC8dkarwsD62vf1rDyLbbnNZfUHmDsbxXk9pV3IwR3HEtYNdNTzz8oo15HsHjNoG+w0tkmkvTwFDuyHdtBBk9Vyw6gLIdJFJ1A1EwloBbv4JF9Ua3Y22suZ04ohGFvr2Paypgkomi3YLpJS+E3nZpVFai+AGjYLnOxromdjW8MC4LBG9h0qmRnKQWYexcaxiyVS4oPIHsSdQDy4csecZuPk2dxNtXbY/FaNMIzqcGTw5XXfsfo/MawT6iGggMJtbYor9I8bHY0NeSgKI5bX9JCHbbhImr8dPvn92qfmcvM/8kXDTkbp/SGs3pykD728K4uo5OhGzrrF4yb3Geo+uw=

before_install:
# Create openproject dir if it doesn't exist and cd into it
# The OpenProject Core will be put inside this folder
- mkdir -p ../openproject; cd ../openproject

# Remove the Gemfile (if it exists, otherwise this command just finishes without error)
# Necessary to be able to clone the OpenProject git repo into the current folder
# The Gemfile is needed to make the Bundler cache of Travis CI work so it's cached between jobs
- rm -rf Gemfile

# Install the plugin in the core
- cp $TRAVIS_BUILD_DIR/Gemfile.plugins Gemfile.plugins

# (only executed in the prepare cache  job and reused later) get the SHA of the last succesfull
# travis build of the OpenProject Core dev branch and store in a file for later use.
# This SHA is kept the same for all jobs but is updated again for a completely new run of the pipeline.
# The scripts/get_last_succesfull_sha.sh script uses GitHub API requests to finds this SHA
- if [ "$TRAVIS_JOB_NAME" == "Prepare cache" ]; then rm -rf last_succesfull_build_sha.txt && $TRAVIS_BUILD_DIR/scripts/get_last_succesfull_sha.sh > last_succesfull_build_sha.txt; fi

# Get the OpenProject core. Use fetch & checkout to be able to clone into
# a non-empty directory
- git init
- git remote add openproject https://github.com/opf/openproject.git
- git fetch --depth=30 openproject dev
- git checkout $(cat last_succesfull_build_sha.txt)

- gem install bundler
- nvm install --lts

bundler_args: "--binstubs --without development production docker --path ../openproject/vendor/bundle"

stages:
- prepare cache
- test

jobs:
  include:
  - stage: prepare cache
    name: Prepare cache
    script:
    - bash script/ci/db_setup.sh
    - bash script/ci/cache_prepare.sh
  - stage: test
    name: 'npm'
    script:
    - bash script/ci/setup.sh npm
    - bash script/ci/runner.sh npm

  - stage: test
    name: 'spec_legacy (1/1) - standard'
    script:
    - bash script/ci/setup.sh spec_legacy
    - bash script/ci/runner.sh spec_legacy 1 1

  - stage: test
    name: 'units (1/4) - standard'
    script:
    - bash script/ci/setup.sh units
    - bash script/ci/runner.sh units 4 1

  - stage: test
    name: 'units (2/4) - standard'
    script:
    - bash script/ci/setup.sh units
    - bash script/ci/runner.sh units 4 2

  - stage: test
    name: 'units (3/4) - standard'
    script:
    - bash script/ci/setup.sh units
    - bash script/ci/runner.sh units 4 3

  - stage: test
    name: 'units (4/4) - standard'
    script:
    - bash script/ci/setup.sh units
    - bash script/ci/runner.sh units 4 4

  - stage: test
    name: 'features (1/4) - standard'
    script:
    - bash script/ci/setup.sh features
    - bash script/ci/runner.sh features 4 1

  - stage: test
    name: 'features (2/4) - standard'
    script:
    - bash script/ci/setup.sh features
    - bash script/ci/runner.sh features 4 2

  - stage: test
    name: 'features (3/4) - standard'
    script:
    - bash script/ci/setup.sh features
    - bash script/ci/runner.sh features 4 3

  - stage: test
    name: 'features (4/4) - standard'
    script:
    - bash script/ci/setup.sh features
    - bash script/ci/runner.sh features 4 4

  - stage: test
    name: 'plugins:units (1/1) - standard'
    script:
    - bash script/ci/setup.sh plugins:units
    - bash script/ci/runner.sh plugins:units 1 1

  - stage: test
    name: 'plugins:features (1/1) - standard'
    script:
    - bash script/ci/setup.sh plugins:features
    - bash script/ci/runner.sh plugins:features 1 1

  - stage: test
    name: 'plugins:cucumber (1/1) - standard'
    script:
    - bash script/ci/setup.sh plugins:cucumber
    - bash script/ci/runner.sh plugins:cucumber 1 1

addons:
  chrome: stable
  postgresql: '9.6'
